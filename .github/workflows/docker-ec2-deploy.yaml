name: .NET Backend CI/CD Pipeline
on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: false
        default: 'ec2'
        type: choice
        options:
        - ec2
        - azure
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
      - name: Create appsettings.json
        run: |
          mkdir -p ./publish
          echo '${{ secrets.PROD_APPSETTINGS }}' > ./publish/appsettings.json
          echo "Created appsettings.json from GitHub secret"
      - name: Restore dependencies
        run: dotnet restore ./BankBackend.csproj
      - name: Build
        run: dotnet build ./BankBackend.csproj --no-restore --configuration Release
      - name: Test
        run: dotnet test ./BankBackend.csproj --no-build --verbosity normal
      - name: Publish
        run: dotnet publish ./BankBackend.csproj -c Release -o ./publish
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: phippedersen/dockerized-backend:latest
  deploy-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'ec2' || github.event.inputs.environment == ''
    environment: ec2
    steps:
      - name: Deploy Backend to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull phippedersen/dockerized-backend:latest
            docker stop backend-container || true
            docker rm backend-container || true
            docker run -d --name backend-container --network ec2-user_app-network -p 8080:8080 phippedersen/dockerized-backend:latest
            docker image prune -f
  deploy-azure:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'azure'
    environment: azure
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: phippedersen/dockerized-backend:latest
